; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; default_envs = esp_devcore
[env]
; platform = espressif8266
; board = esp12e
framework = arduino
;#only use lowercase in esp_name
name_esp_core = esp_core
pw_esp_core = 0000
upload_port_esp_core = 192.168.201.53
name_esp_hall = esp_hall
pw_esp_hall = 0002
; upload_port_esp_hall = 192.168.201.65
upload_port_esp_hall = 192.168.1.103
build_flags_external =
  ; -frtti ; жрет много памяти, нужно для typeid(T).name()
  -Wno-register
  -Wno-deprecated-declarations
  -I../amigo_core
  ; -I../amigo_core/include
  ; -L../amigo_core
  ; -L../amigo_core/src
; build_flags =
;     -D VERSION=1.2.3
;     -D DEBUG=1
; lib_deps_builtin =
;     SPI
;     Wire
; lib_deps_external =
lib_extra_dirs = 
  ../amigo_core
  ../amigo_lib
lib_ldf_mode = deep ; могу переходить к библиотеке и редактировать её

[env:esp32-c3-core-com]
; platform = espressif32
platform = https://github.com/platformio/platform-espressif32.git
board = esp32-c3-devkitm-1
; change microcontroller
; board_build.mcu = esp32c3
; change MCU frequency
; board_build.f_cpu = 160000000L
build_flags =
  ; -D USER_AREA ; убрать, чтобы собрать только ядро
  -D OTA_NAME=\"${env.name_esp_core}\"
  -D OTA_PASS=\"${env.pw_esp_core}\"
  -D CORE_NTP
  ${env.build_flags_external}
upload_speed = 921600
monitor_speed = 115200
lib_deps =
  AsyncMqttClient ; marvinroger/AsyncMqttClient@^0.9.0
  ; WiFiUdp
  PaulStoffregen/Time ; PaulStoffregen/Time@^1.6.1
;   Ticker ; ???
  ; arduino-libraries/NTPClient ; arduino-libraries/NTPClient @ ~3.2.1
  ; mcxiaoke/ESPDateTime ; mcxiaoke/ESPDateTime @ ^1.0.4
  gmag11/NtpClientLib

[env:esp32-c3-core-ota]
platform = espressif32
board = esp32-c3-devkitm-1
; change microcontroller
board_build.mcu = esp32c3
; change MCU frequency
; board_build.f_cpu = 160000000L
build_flags =
  ; -D USER_AREA ; убрать, чтобы собрать только ядро
  -D OTA_NAME=\"${env.name_esp_core}\"
  -D OTA_PASS=\"${env.pw_esp_core}\"
  -D CORE_NTP
  ${env.build_flags_external}
upload_speed = 921600
upload_protocol = espota
upload_flags = --auth=${env.pw_esp_core}    
; upload_port = ${env.name_esp_core}.local
upload_port = ${env.upload_port_esp_core}
monitor_speed = 115200
lib_deps =
  AsyncMqttClient ; marvinroger/AsyncMqttClient@^0.9.0
  ; WiFiUdp
  PaulStoffregen/Time ; PaulStoffregen/Time@^1.6.1
;   Ticker ; ???
  ; arduino-libraries/NTPClient ; arduino-libraries/NTPClient @ ~3.2.1
  ; mcxiaoke/ESPDateTime ; mcxiaoke/ESPDateTime @ ^1.0.4
  gmag11/NtpClientLib

[env:esp_core_com]
platform = espressif8266
board = esp12e
board_build.flash_mode = dio ; использование dio10 для наших задач
board_build.ldscript = eagle.flash.4m.ld
build_flags =
  ; -D USER_AREA ; убрать, чтобы собрать только ядро
  -D OTA_NAME=\"${env.name_esp_core}\"
  -D OTA_PASS=\"${env.pw_esp_core}\"
  ${env.build_flags_external}
upload_speed = 921600
monitor_speed = 115200
lib_deps =
  AsyncMqttClient ; marvinroger/AsyncMqttClient@^0.9.0
  ESPAsyncUDP ; me-no-dev/ESPAsyncUDP@^1.1.0
  PaulStoffregen/Time ; PaulStoffregen/Time@^1.6.1
  Ticker ; ???
  ; ESP8266WiFi

[env:esp_core_ota]
platform = espressif8266
board = esp12e
board_build.flash_mode = dio ; использование dio10 для наших задач
board_build.ldscript = eagle.flash.4m.ld
build_flags =
  ; -D USER_AREA ; убрать, чтобы собрать только ядро
  -D OTA_NAME=\"${env.name_esp_core}\"
  -D OTA_PASS=\"${env.pw_esp_core}\"
  ${env.build_flags_external}
upload_speed = 921600
upload_protocol = espota
upload_flags = --auth=${env.pw_esp_core}    
; upload_port = ${env.name_esp_core}.local
upload_port = ${env.upload_port_esp_core}
monitor_speed = 115200
lib_deps =
  AsyncMqttClient ; marvinroger/AsyncMqttClient@^0.9.0
  ESPAsyncUDP ; me-no-dev/ESPAsyncUDP@^1.1.0
  PaulStoffregen/Time ; PaulStoffregen/Time@^1.6.1
  Ticker ; ???
  ; ESP8266WiFi

[env:esp_hall_com]
platform = espressif8266
board = esp12e
board_build.flash_mode = dio ; использование dio10 для наших задач
board_build.ldscript = eagle.flash.4m.ld
build_flags =
  -D USER_AREA ; убрать, чтобы собрать только ядро
  -D OTA_NAME=\"${env.name_esp_hall}\"
  -D OTA_PASS=\"${env.pw_esp_hall}\"
  ${env.build_flags_external}
upload_speed = 921600
monitor_speed = 115200
lib_deps =
  AsyncMqttClient ; marvinroger/AsyncMqttClient@^0.9.0
  ESPAsyncUDP ; me-no-dev/ESPAsyncUDP@^1.1.0
  PaulStoffregen/Time ; PaulStoffregen/Time@^1.6.1
  Ticker ; ???
  ; ESP8266WiFi

[env:esp_hall_ota]
platform = espressif8266
board = esp12e
board_build.flash_mode = dio ; использование dio10 для наших задач
board_build.ldscript = eagle.flash.4m.ld
build_flags =
  -D USER_AREA ; убрать, чтобы собрать только ядро
  -D OTA_NAME=\"${env.name_esp_hall}\"
  -D OTA_PASS=\"${env.pw_esp_hall}\"
  ${env.build_flags_external}
upload_speed = 921600
upload_protocol = espota
upload_flags = --auth=${env.pw_esp_hall}
; upload_port = ${env.name_esp_hall}.local
upload_port = ${env.upload_port_esp_hall}
monitor_speed = 115200
lib_deps =
  AsyncMqttClient ; marvinroger/AsyncMqttClient@^0.9.0
  ESPAsyncUDP ; me-no-dev/ESPAsyncUDP@^1.1.0
  PaulStoffregen/Time ; PaulStoffregen/Time@^1.6.1
  Ticker ; ???
  ; ESP8266WiFi


; lib_ldf_mode = deep ; могу переходить к библиотеке и редактировать её

; build_flags =
;   -Wno-register
;   -Wno-deprecated-declarations

; lib_deps =
;   ${env.lib_deps_external}


; [env:nodemcuv2]
; platform = espressif8266
; board = nodemcuv2
; framework = arduino
; upload_speed = 921600
; monitor_baud = 115200

; [env:nodemcuv2_ota]
; platform = espressif8266
; board = nodemcuv2
; framework = arduino
; upload_speed = 921600
; monitor_baud = 115200
; upload_flags = --auth=${ota.esp_pw}    
; upload_port = ${ota.esp_name}.local 
; build_flags = -DESP_NAME=\"${ota.esp_name}\" -DESP_PW=\"${ota.esp_pw}\"